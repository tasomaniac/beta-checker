apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.github.triplet.play'
apply plugin: 'io.fabric'

Properties local_properties = new Properties()
File localPropertiesFile = project.rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    local_properties.load(localPropertiesFile.newDataInputStream())
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.tasomaniac.betachecker"
        minSdkVersion 15
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        resConfigs "en"
    }

    signingConfigs {
        debug {
            storeFile file("../distribution/debug.keystore")
        }

        release {
            storeFile file("../distribution/" + (local_properties.release_keystore_name ?: "debug.keystore"))
            keyAlias(local_properties.release_keystore_alias ?: "androiddebugkey")
            storePassword(local_properties.release_keystore_pwd ?: "android")
            keyPassword(local_properties.release_keystore_pwd2 ?: "android")
        }
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            versionNameSuffix "-debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        textReport true
        textOutput 'stdout'

        fatal 'UnusedResources'
        warning 'InvalidPackage'
    }
}

play {
    serviceAccountEmail = local_properties.play_service_account ?: ''
    pk12File = file("../distribution/" + (local_properties.play_key_file ?: 'no-file.p12'))
    track = 'production'
}

dependencies {
    def supportLibVersion = "24.2.1"
    def butterKnifeVersion = '8.2.1'

    compile "com.android.support:customtabs:$supportLibVersion"
//    compile "com.android.support:appcompat-v7:$supportLibVersion"
//    compile "com.android.support:recyclerview-v7:$supportLibVersion"
//    compile "com.android.support:design:$supportLibVersion"
//    compile "com.android.support:preference-v14:$supportLibVersion"

//    compile "com.jakewharton:butterknife:$butterKnifeVersion"
//    apt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    compile 'com.jakewharton.timber:timber:4.3.0'

    compile 'com.crashlytics.sdk.android:crashlytics:2.6.2'

    testCompile 'junit:junit:4.12'
}
