apply plugin: 'com.android.application'
apply plugin: 'com.novoda.android-command'
apply plugin: 'com.novoda.build-properties'
apply plugin: 'com.github.triplet.play'

def signingFile = file 'props/release.signing'
buildProperties {
    signing.using signingFile.exists() ? signingFile : file('props/debug.signing')
    secrets.using file('props/secrets.properties')
}

def secrets = buildProperties.secrets

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId "com.tasomaniac.betachecker"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName

        resConfigs "en"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
//            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        encoding = 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        textReport true
        textOutput 'stdout'

        lintConfig file('props/lint.xml')
        // We run a full lint analysis as build part in CI, so skip vital checks for assemble tasks.
        checkReleaseBuilds false
    }

    signingConfigs.all { signingConfig ->
        signingConfig.ext.from = { buildProperties ->
            signingConfig.storeFile teamPropsFile(buildProperties['storeFile'].string)
            signingConfig.storePassword buildProperties['storePassword'].string
            signingConfig.keyAlias buildProperties['keyAlias'].string
            signingConfig.keyPassword buildProperties['keyPassword'].string
        }
    }

    signingConfigs {
        debug.storeFile file('props/debug.keystore')
        release.from signing
    }
}

play {
    serviceAccountEmail = secrets['play_service_account'].or('').string
    pk12File = file secrets['play_key_file'].or('no_file.p12').string
    track = 'alpha'
}

dependencies {
    implementation 'androidx.annotation:annotation:1.0.1'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'
    implementation 'androidx.browser:browser:1.0.0'
    implementation 'androidx.core:core:1.1.0-alpha03'
}
